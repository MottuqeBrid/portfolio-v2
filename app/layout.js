import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import icon from "./(home)/icon.png";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export const metadata = {
  title: "Md. Mottuqe Brid | Next.js & MERN Stack Web Developer",
  description:
    "I'm Md. Mottuqe Brid, a passionate web developer based in Khulna, Bangladesh. I build fast, scalable, and visually engaging web apps using Next.js and the MERN stack.",
  keywords: [
    "Md. Mottuqe Brid",
    "Mottuqe Brid",
    "Web Developer Bangladesh",
    "Next.js Developer",
    "MERN Stack Developer",
    "React Developer",
    "Full Stack Web Developer",
    "Portfolio",
    "Khulna Developer",
  ],
  authors: [{ name: "Md. Mottuqe Brid", url: "https://mottuqe.top" }],
  creator: "Md. Mottuqe Brid",
  metadataBase: new URL("https://mottuqe.top"),
  openGraph: {
    title: "Md. Mottuqe Brid | Web Developer Portfolio",
    description:
      "Next.js and MERN Stack developer building modern, scalable web apps in Bangladesh.",
    url: "https://mottuqe.top",
    siteName: "Md. Mottuqe Brid Portfolio",
    images: [
      {
        url: "https://i.ibb.co/wh7g5BYX/471115022-511967082000805-8676765132317942582-n.jpg", // Replace with actual image
        width: 1200,
        height: 630,
        alt: "Md. Mottuqe Brid Portfolio",
      },
    ],
    locale: "en_US",
    type: "website",
  },
  // twitter: {
  //   card: "summary_large_image",
  //   title: "Md. Mottuqe Brid | Web Developer Portfolio",
  //   description:
  //     "Portfolio of Md. Mottuqe Brid â€” MERN & Next.js Developer based in Bangladesh.",
  //   images: ["https://yourdomain.com/og-image.jpg"], // Replace with your image
  //   creator: "@yourTwitterHandle", // Optional
  // },
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <link rel="icon" type="image/png" href="/favicon.ico" sizes="any" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
